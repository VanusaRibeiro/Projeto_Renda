

import pandas as pd
import numpy as np
import streamlit as st
import datetime as dt
import plotly.graph_objects as go
from plotly.subplots import make_subplots
import plotly.express as px
from xgboost import XGBClassifier
#import sklearn
import altair
import pickle
import seaborn as sns
import matplotlib.pyplot as plt
# -------------------------------------- Cabe√ßalho -------------------------------------------------------#
sns.set(context='talk', style='ticks')

st.set_page_config(
    page_title="APR - Projeto An√°lise de Previs√£o de Renda",
    page_icon="üìà",
)

st.title("ü§ë APR - An√°lise Explorat√≥ria de Previs√£o de Renda")
st.header("")


with st.expander("‚ÑπÔ∏è - About this app", expanded=False):
	st.write(
        """     
	-   Esse app foi criado para realizar an√°lise de renda de um grupo de pessoas com rela√ß√£o a Concess√£o de Cart√£o de Cr√©dito.
    -   nosso objetivo √© construir um modelo preditivo para identificar o risco de inadimpl√™ncia (tipicamente definida pela   
        ocorr√™ncia de um atraso maior ou igual a 90 em um horizonte de 12 meses) atrav√©s de vari√°veis que podem ser observadas 
        na data da avalia√ß√£o do cr√©dito (tipicamente quando o cliente solicita o cart√£o).
        desenvolver o melhor modelo preditivo de modo a auxiliar o mutu√°rio a tomar suas pr√≥prias decis√µes referentes a cr√©dito. 
        Nessa etapa tamb√©m se avalia a situa√ß√£o da empresa/segmento/assunto de modo a se entender o tamanho do p√∫blico, relev√¢ncia, 
        problemas presentes e todos os detalhes do processo gerador do fen√¥meno em quest√£o, e portanto dos dados.
	-   O c√≥digo do app pode ser conferido em: 'https://github.com/VanusaRibeiro/Projeto/blob/main/renda%20previsao-Copy1.ipynb'
	-   Autora: Vanusa Ribeiro
	    """
	)
	st.markdown("")  

    
st.write('## Projeto baseado na Tabela abaixo')

renda = pd.read_csv('./Downloads/colab/projeto2023/projeto final/projeto 2/previsao_de_renda.csv')

@st.cache_resource
def load_data():
    # Carregue seu DataFrame aqui
    df = renda
    return df
 
df = load_data()
st.dataframe(df)
st.subheader('Com base na tabela mencionada foram feitos levantamentos estat√≠sticos em que se obteve os seguintes insights:')
st.subheader('Em rela√ß√£o ao p√∫blico foi identificado que:')
st.subheader('1- P√∫blicos que possuem N√≠vel Superior completo, Servidores P√∫blicos, casados, possuem im√≥veis ou ve√≠culos e no m√°ximo 02 filhos, tem menos riscos de inadimpl√™ncia.')
st.subheader('2- P√∫blicos empres√°rios, assalariados,bolsistas, com n√≠vel m√©dio,solteiros ou separados,possuem uma renda moderada n√£o demonstrando um alto risco de inadimpl√™ncia.')
st.subheader('3- P√∫blicos pensionistas, vi√∫vos, que moram com os pais e com maior quantidades de filhos possuem um alto risco de inadimppl√™ncia.')
st.subheader('Podemos verificar essas informa√ß√µes nos gr√°ficos gerados ao longo do tempo:')
#plots
fig, ax = plt.subplots(8,1,figsize=(10,70))
renda[['posse_de_imovel','renda']].plot(kind='hist', ax=ax[0])

st.write('## Gr√°ficos ao longo do tempo')

sns.lineplot(x='data_ref',y='renda', hue='posse_de_imovel',data=renda, ax=ax[1])
ax[1].tick_params(axis='x', rotation=45)

sns.lineplot(x='data_ref',y='renda', hue='posse_de_veiculo',data=renda, ax=ax[2])
ax[2].tick_params(axis='x', rotation=45)

sns.lineplot(x='data_ref',y='renda', hue='qtd_filhos',data=renda, ax=ax[3])
ax[3].tick_params(axis='x', rotation=45)

sns.lineplot(x='data_ref',y='renda', hue='tipo_renda',data=renda, ax=ax[4])
ax[4].tick_params(axis='x', rotation=45)

sns.lineplot(x='data_ref',y='renda', hue='educacao',data=renda, ax=ax[5])
ax[5].tick_params(axis='x', rotation=45)

sns.lineplot(x='data_ref',y='renda', hue='estado_civil',data=renda, ax=ax[6])
ax[6].tick_params(axis='x', rotation=45)

sns.lineplot(x='data_ref',y='renda', hue='tipo_residencia',data=renda, ax=ax[7])
ax[7].tick_params(axis='x', rotation=45)
sns.despine()
st.pyplot(plt)

st.write('## Gr√°ficos bivariada')

fig, ax = plt.subplots(7,1,figsize=(10,50))
sns.barplot(x='posse_de_imovel',y='renda',data=renda, ax=ax[0])
sns.barplot(x='posse_de_veiculo',y='renda',data=renda, ax=ax[1])
sns.barplot(x='qtd_filhos',y='renda',data=renda, ax=ax[2])
sns.barplot(x='tipo_renda',y='renda',data=renda, ax=ax[3])
sns.barplot(x='educacao',y='renda',data=renda, ax=ax[4])
sns.barplot(x='estado_civil',y='renda',data=renda, ax=ax[5])
sns.barplot(x='tipo_residencia',y='renda',data=renda, ax=ax[6])
sns.despine()
st.pyplot(plt)